<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MOSARTs on</title><link>https://taranudev.github.io/mosart/</link><description>Recent content in MOSARTs on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://taranudev.github.io/mosart/index.xml" rel="self" type="application/rss+xml"/><item><title>Changes Tracker MOSART</title><link>https://taranudev.github.io/MOSART/Changes_Tracker_MOSART/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/Changes_Tracker_MOSART/</guid><description>Here we track all modifications done to the MOSART in order to support sectoral water usage The GitHub fork can be accessed here</description></item><item><title>mosart_cpl_indices.F90</title><link>https://taranudev.github.io/MOSART/mosart_cpl_indices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/mosart_cpl_indices/</guid><description>Overview: This module simply extract the indices for the fields passed between MOSART and the driver.
To support sectoral water usage we add the indices corresponding to sectoral water usage.</description></item><item><title>mosart_import_export.F90</title><link>https://taranudev.github.io/MOSART/mosart_import_export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/mosart_import_export/</guid><description>Overview: Using the import fields indices for sectoral water usage fluxes defined in MOSART/src/cpl/mct/mosart_cpl_indices.F90 we extract the relevant fields (withdrawal and return flow for each sector) and store them in the rtmCTL object which is an instance of runoff_flow object.</description></item><item><title>rof_comp_mct.F90</title><link>https://taranudev.github.io/MOSART/rof_comp_mct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/rof_comp_mct/</guid><description>Add possibility to access the indices for sectoral water usage as defined in MOSART/src/cpl/mct/mosart_cpl_indices.F90.
But not sure if really required.</description></item><item><title>rof_import_export.F90</title><link>https://taranudev.github.io/MOSART/rof_import_export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/rof_import_export/</guid><description>Overview: Here we do the important of relevant fields from importState (from coupler to rof).
To support sectoral water usage, we add the import of withdrawal and return fluxes for each sector.</description></item><item><title>RtmHistFlds.F90</title><link>https://taranudev.github.io/MOSART/RtmHistFlds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RtmHistFlds/</guid><description>Overview: For each sector we add 3 new outputs from the routing model. These are:
QsectorX_WITHD_FROM_COUPLER QsectorX_RF_FROM_COUPLER QsectorX_ACTUAL In general QsectorX_WITHD_FROM_COUPLER already corresponds to an actual withdrawal, since river volume is also accounted in the land component.</description></item><item><title>RtmMod.F90</title><link>https://taranudev.github.io/MOSART/RtmMod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RtmMod/</guid><description>Overview: The Rtmrun() subroutine is basically the routing model itself. For supporting sectoral water usage we have to implement several changes, and notably to calculate the actual withdrawals and return flows taking into account the available river water, as well as account for these flows in the routing budget.</description></item><item><title>RunoffMod.F90</title><link>https://taranudev.github.io/MOSART/RunoffMod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RunoffMod/</guid><description>Overview: Small changes to the runoff_flow type for support of sectoral water fluxes. Also allocate the memory and initialize variables with default values (zeros).</description></item></channel></rss>