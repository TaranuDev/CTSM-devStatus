<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Routing on</title><link>https://taranudev.github.io/tags/Routing/</link><description>Recent content in Routing on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://taranudev.github.io/tags/Routing/index.xml" rel="self" type="application/rss+xml"/><item><title>RtmHistFlds.F90</title><link>https://taranudev.github.io/MOSART/RtmHistFlds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RtmHistFlds/</guid><description>Overview: For each sector we add 3 new outputs from the routing model. These are:
QsectorX_WITHD_FROM_COUPLER QsectorX_RF_FROM_COUPLER QsectorX_ACTUAL In general QsectorX_WITHD_FROM_COUPLER already corresponds to an actual withdrawal, since river volume is also accounted in the land component.</description></item><item><title>RtmMod.F90</title><link>https://taranudev.github.io/MOSART/RtmMod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RtmMod/</guid><description>Overview: The Rtmrun() subroutine is basically the routing model itself. For supporting sectoral water usage we have to implement several changes, and notably to calculate the actual withdrawals and return flows taking into account the available river water, as well as account for these flows in the routing budget.</description></item><item><title>RunoffMod.F90</title><link>https://taranudev.github.io/MOSART/RunoffMod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taranudev.github.io/MOSART/RunoffMod/</guid><description>Overview: Small changes to the runoff_flow type for support of sectoral water fluxes. Also allocate the memory and initialize variables with default values (zeros).</description></item></channel></rss>